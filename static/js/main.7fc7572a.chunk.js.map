{"version":3,"sources":["reducers/index.js","libraries/socket.js","components/Canvas/useLogic.js","components/Canvas/useStyles.js","components/Canvas/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["loading","state","reducer","value","socket","io","useLogic","useState","points","setPoints","canvas","useRef","isDrawing","useEffect","on","length","context","getContext","fillStyle","initial","current","moveTo","lineTo","stroke","draw","off","ratioX","width","clientWidth","ratioY","height","clientHeight","emit","toggleDrawing","drawing","nativeEvent","offsetX","offsetY","addPoint","makeStyles","root","position","background","display","alignItems","justifyContent","container","maxWidth","maxHeight","svg","top","left","Canvas","classes","useStyles","className","onPointerDown","onPointerUp","onPointerMove","ref","theme","createMuiTheme","spacing","factor","App","reducers","MuiThemeProvider","CssBaseline","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.7fc7572a.chunk.js","sourcesContent":["export default {\n    loading: {\n        state: false,\n        reducer: (state, value) => value,\n    },\n}","import io from \"socket.io-client\"\n\nconst HOST = \"https://javiscript-paint.herokuapp.com/\"\n\nconst socket = io(HOST)\n\nexport default socket","import { useRef, useState, useEffect } from \"react\"\nimport socket from \"libraries/socket\"\n\nfunction useLogic() {\n    const [points, setPoints] = useState([])\n    const canvas = useRef()\n    const isDrawing = useRef(false)\n\n    function toggleDrawing(drawing) {\n        return ({ nativeEvent }) => {\n            isDrawing.current = drawing\n            const { offsetX, offsetY } = nativeEvent\n            if (drawing) setPoints([[offsetX, offsetY]])\n        }\n    }\n\n    function addPoint({ nativeEvent }) {\n        if (isDrawing.current) {\n            const { offsetX, offsetY } = nativeEvent\n            setPoints(([initial, current]) => [current ? current : initial, [offsetX, offsetY]])\n        }\n    }\n\n    useEffect(() => {\n        socket.on(\"draw\", points => draw(canvas.current, points))\n        return () => socket.off(\"draw\")\n    }, [])\n\n    useEffect(() => {\n        if (points.length !== 2) return\n        const [initial, current] = points\n        const [ratioX, ratioY] = [canvas.current.width / canvas.current.clientWidth, canvas.current.height / canvas.current.clientHeight]\n        socket.emit(\"draw\", [[ratioX * initial[0], ratioY * initial[1]], [ratioX * current[0], ratioY * current[1]]])\n    }, [points])\n\n    return { canvas, toggleDrawing, addPoint }\n}\n\nfunction draw(canvas: HTMLCanvasElement, points) {\n    if (points.length !== 2) return\n    const context = canvas.getContext(\"2d\")\n    context.fillStyle = \"#000000\"\n\n    const [initial, current] = points\n\n    context.moveTo(...initial)\n    context.lineTo(...current)\n    context.stroke()\n}\n\nexport default useLogic","import { makeStyles } from \"@material-ui/core\"\n\nexport default makeStyles(() => ({\n    root: {\n        position: \"absolute\",\n        background: \"black\",\n        width: \"100%\",\n        height: \"100%\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n    container: {\n        background: \"white\",\n        position: \"relative\",\n        maxWidth: \"100%\",\n        maxHeight: \"100%\",\n        width: \"100%\",\n        height: \"auto\",\n        \"@media (min-aspect-ratio: 16/9)\": {\n            width: \"auto\",\n            height: \"100%\",\n        }\n    },\n    svg: {\n        display: \"block\",\n        width: \"100%\",\n        height: \"auto\",\n        \"@media (min-aspect-ratio: 16/9)\": {\n            width: \"auto\",\n            height: \"100%\",\n        }\n    },\n    canvas: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        display: \"block\",\n    }\n}))","import React from \"react\"\nimport useLogic from \"./useLogic\"\nimport useStyles from \"./useStyles\"\n\nconst Canvas = () => {\n    const classes = useStyles()\n    const { canvas, toggleDrawing, addPoint } = useLogic()\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.container}>\n                <svg className={classes.svg} width=\"16\" height=\"9\" />\n                <canvas\n                    width=\"1920\"\n                    height=\"1080\"\n                    onPointerDown={toggleDrawing(true)}\n                    onPointerUp={toggleDrawing(false)}\n                    onPointerMove={addPoint}\n                    ref={canvas}\n                    className={classes.canvas} />\n            </div>\n        </div>\n    )\n}\n\nexport default Canvas","import React from \"react\"\nimport { createMuiTheme, MuiThemeProvider, CssBaseline } from \"@material-ui/core\"\nimport { Store } from \"eztore\"\nimport reducers from \"reducers\"\nimport Canvas from \"components/Canvas\"\n\nconst theme = createMuiTheme({\n    spacing: factor => `${0.5 * factor}rem`,\n})\n\nconst App = () => (\n    <Store reducers={reducers}>\n        <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Canvas />\n        </MuiThemeProvider>\n    </Store>\n)\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport App from \"components/App\"\nimport * as serviceWorker from \"serviceWorker\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n\nserviceWorker.register()"],"sourceRoot":""}